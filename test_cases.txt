Test Suit for fakestoreapi.com:

NOTES: 
- fakestoreapi does not support any changes in the database. Any users/products/carts added will not stay in the database.
- the documentation dosn't show any response information, some can be found in the Github repository (https://github.com/keikaavousi/fake-store-api) even though it's not complete.
- to login use the users already in the database, no new users will be added to the database
- PUT method is supposed to update a object and if it doesn't exist, create a new one, PATCH only updates the object
- API documentation does not show status code response
- Documentation has some mistakes in titles

==============================================================================PRODUCTS===========================================================================================
Test case 1: Get all products
Test case 2: Get products by id
Test case 3: Get products by inexistent id
Test case 4: Limit results of products with valid numbers
Test case 5: Limit results of products with invalid number (more than the total number of products)
Test case 6: Limit results of products with negative number
Test case xx: Limit results using string value
Test case 7: Sort results of products descending
Test case 8: Sort results of products ascending
Test case 9: Sort results of products with invalid word
Test case 10: Get all categories
Test case 11: Get all products in a specific category
Test case 12: Get products in an inexistent category
Test case 13: Get all products in a specific category limiting the number of results
Test case 14: Get all products in a specific category ascending
Test case 15: Get all products in a specific category descending
Test case 16: Get all products in a specific category limiting the number of results ascending
Test case 17: Get all products in a specific category limiting the number of results descending
Test case 18: Get all products in a specific category with invalid number ascending
Test case 19: Get all products in a specific category with invalid number descending
Test case 20: Add a new produc with valid information
Test case 21: Add a new product with same title 
Test case 22: Add a new product with blank title space
Test case 23: Add a new product with blank price space
Test case 24: Add a new product with negative price
Test case 25: Add a new product with invalid price type (string)
Test case 26: Add a new product with blank description space
Test case xx: Numeric description space
Test case 27: Add a new produc with invalid image href (NOT MADE, ACCEPTS ANY URL AS IMAGE)
Test case 28: Add a new product with blank image space
Test case 29: Add a new product in an existing category (NOT MADE, ACCEPTS ANY WORD AS VALID CATEGORY)
Test case 30: Add a new product in an inexisting category (NOT MADE, ACCEPTS ANY WORD AS VALID CATEGORY)
Test case 31: Add a new product with blank category space
Test case 32: Update a product with valid information using PUT method
Test case 33: Update a product with valid information using PATCH method
Test case 34: Update a product with blank title space using PUT method
Test case 35: Update a product with blank price space using PUT method
Test case 36: Update a product with blank description space using PUT method
Test case 37: Update a product with blank image space using PUT method
Test case 38: Update a product with blank category space using PUT method
Test case 39: Update a product with blank title space using PATCH method
Test case 40: Update a product with blank price space using PATCH method
Test case 41: Update a product with blank description space using PATCH method
Test case 42: Update a product with blank image space using PATCH method
Test case 43: Update a product with blank category space using PATCH method
Test case 44: Update an inexistent product with PUT method
Test case 45: Update an inexistent product with PATCH method
Test case 46: Delete product with valid id
Test case 47: Delete product with invalid invalid

==============================================================================CARTS===========================================================================================
Test case 48: Get all carts 
Test case 49: Get specific cart with valid id 
Test case 50: Get specific cart with invalid id
Test case 51: Limit results of carts with valid numbers
Test case 52: Limit results of products with invalid number (more than the total number of products)
Test case 53: Limit results of products with negative number
Test case 54: Sort results of carts descending
Test case 55: Sort results of carts ascending
Test case 56: Sort results of carts with invalid word
Test case 57: Get carts with valid date range
Test case 58: Get carts with no end date
Test case 59: Get carts with no start date
Test case 60: Get carts with invalid start date format
Test case 61: Get carts with invalid end date format
Test case 62: Get carts with invalid start and end date format 
Test case 63: Get carts with valid date range ascending
Test case 64: Get all carts with valid date range descending
Test case 65: Get all carts with valid date range limiting the number of results ascending
Test case 66: Get all carts with valid date range limiting the number of results descending
Test case 67: Get all carts with valid date range limiting the number of results with invalid number ascending
Test case 68: Get all carts with valid date range limiting the number of results with invalid number descending
Test case 69: Get all carts with invalid end date limiting the number of results ascending
Test case 70: Get all carts with invalid start date limiting the number of results ascending
Test case 71: Get all carts with invalid end date limiting the number of results descending
Test case 72: Get all carts with invalid start date limiting the number of results descending
Test case 73: Get all carts from specific user
Test case 74: Get all carts from inexistent user
Test case 75: Get all carts from specific user sorting by valid date range
Test case 76: Get all carts from specific user sorting by valid date range with surely no carts to return
Test case 77: Get all carts from specific user sorting by date range with invalid start date
Test case 78: Get all carts from specific user sorting by date range with invalid end date
Test case 79: Add a new cart to an existing user
Test case 80: Add a new cart to an inexistent user
Test case 81: Add a new cart with invalid date format (DD-MM-YYYY)
Test case 82: Add a new cart with invalid month date (13, for example)
Test case 83: Add a new cart with future year (2030)
Test case 84: Add a new cart with blank user id space
Test case 85: Add a new cart with blank date space
Test case 86: Add a new cart with blank products space
Test case 88: Add a new cart with blank productId space
Test case 89: Add a new cart with blank product quantity space
Test case 90: Add a new cart with invalid product quantity type (string)
Test case 91: Add a new cart with negative product quantity
Test case 92: Add a new cart with 0 as product quantity
Test case 93: Update an existing cart with valid information using PUT method
Test case 94: Update an existing cart with valid information using PATCH method
Test case 95: Update an existing cart with inexistent id information using PUT method
Test case 96: Update an existing cart with inexisting id information using PATCH method
Test case 97: Update an existing cart with invalid date format using PUT method
Test case 98: Update an existing cart with invalid date format using PATCH method
Test case 99: Update an existing cart with blank date space using PUT method
Test case 100: Update an existing cart with blank date space using PATCH method
Test case 101: Update an existing cart with blank products space using PUT method
Test case 102: Update an existing cart with blank products space using PATCH method
Test case 103: Update an existing cart with blank productId space using PUT method
Test case 104: Update an existing cart with blank productId space using PATCH method
Test case 105: Update an existing cart with blank product quantity space using PUT method
Test case 106: Update an existing cart with blank product quantity space using PATCH method
Test case 107: Delete a cart using valid id information
Test case 108: Delete a cart using invalid id information

==============================================================================USERS===========================================================================================

==============================================================================LOGIN===========================================================================================
Test case xx: Login with valid user information
Test case xx: Login with invalid user information
Test case xx: Login with blank password space
Test case xx: Login with blank username space
Test case xx: Login with correct username and wrong password
Test case xx: Login with e-mail from a valid user and its correct password